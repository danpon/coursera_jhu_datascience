flags_color <- flags[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique, numeric(1))
ok()
sapply(flags,class)
vaplly(flags,class,character(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
ibrary(datasets)
library(datasets)
data(iris)
?iris
head(iris)
subset(iris,Species="virginica")
library(datasets)
data(iris)
virginica <- subset(iris,Species="virginica")
mean(virginica$Sepal.Length)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
debug(ls)
ls()
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
q
?split
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
class(tapply(mtcars$hp, mtcars$cyl, mean))
hp_by_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_by_cyl
q
uit
quit
e
exit
q
hp_by_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_by_cyl
hp_by_cyl[8]-hp_by_cyl[4]
hp_by_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_by_cyl[3]-hp_by_cyl[1]
library(datasets)
data(iris)
virginica <- subset(iris,Species="virginica")
mean(virginica$Sepal.Length)
undebug(ls)
virginica <- subset(iris,Species="virginica")
mean(virginica$Sepal.Length,na.rm=TRUE)
apply(iris[, 1:4], 2, summary)
virginica <- subset(iris,Species="virginica")
virginica
virginica <- subset(iris,Species=" vvirginica")
virginica
virginica <- subset(iris,Species=" virginica")
virginica
virginica <- subset(iris,Species==" virginica")
virginica
virginica <- subset(iris,Species="virginica")
virginica
unique(iris$species)
unique(iris$Species)
virginica <- subset(iris,Species==" virginica")
virginica
virginica <- subset(iris,Species=="virginica")
virginica
mean(virginica$Sepal.Length,na.rm=TRUE)
tapply(mtcars$cyl, mtcars$mpg, mean)
hp_by_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_by_cyl[3]-hp_by_cyl[1]
split(mtcars$mpg, mtcars$cyl)
inverse
gewd()
getwd()
setwd( "C:/Dev/ProgrammingAssignment2")
source("cachematrix.R")
A <- matrix(c(1,3,-2,2),nrow = 2,ncol=2)
A
solve(A)
x <- makeCacheMatrix(A)
x
y <- cacheSolve(x)
y
mean(A)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(swirl)
install_from_swirl("R Programming")
swirl()
ls()
clas(plants)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace= TRUE)
sample(1:6,4,replace= TRUE)
dample(1:20,10)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),prob=c(0.3,0.7))
sample(c(0,1),100,prob=c(0.3,0.7))
sample(c(0,1),100,prob=c(0.3,0.7),replace=TRUE)
flips <- sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(100,size=1,prob=0.7)
filps2 <- rbinom(100,size=1,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,1)
rnorm(10,100,25)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm  <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(cars$dist,cars$speed)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab = "Speed")
plot(x=cars$speed,y=cars$dist,ylab = "Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab = "Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot",sub="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(data,mpg~cyl)
boxplot(formula=mpg~cyl)
boxplot(mtcars,formula=mpg~cyl)
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(formula=mpg~cyl, data=mtcars)
hist(mtcars$mpg)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
getwd()
setwd("rprog_data_ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
setwd("rprog_data_ProgAssignment3-data")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
# 30-day death rates from heart attack
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
source("best.R")
setwd("..")
getwd()
source("plot.R")
source("plot.R")
best <- function(state, outcome) {
## Read outcome data
outcome <- read.csv("rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
source("best.R")
outcome <- read.csv("rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome <- read.csv("rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
str(outcome)
names(outcome)
source("best.R")
best("XX",0)
best("CA",0)
str(outcome)
names(outcome)
source("best.R")
best("CA",0)
source("best.R")
best("CA","heart attack")
source("best.R")
best("CA","heart attack")
best("CA","heart attac")
best("CA","heart attac")
source("best.R")
best("CA","heart attac")
best("CA","heart attac")
source("best.R")
best("CA","heart attac")
print(indice_outcome)
best("CA","heart attack")
source("best.R")
best("CA","heart attack")
best("CA","heart attac")
?which
best("CA","heart attac")
source("best.R")
best("CA","heart attac")
source("best.R")
best("CA","heart attac")
best("CA","heart attack")
source("best.R")
best("CA","heart attack")
source("best.R")
best("CA","heart attack")
best("XA","heart attack")
best("CA","heart attack")
best("CA","heart attac")
best("CA","heart attack")
best("CA","heart failure")
best("CA","heart failure")
best("CA","heart failue")
best("CA","heart pneumonia")
source("best.R")
best("CA","heart pneumonia")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
best("ACA","pneumonia")
best("CA","pneumonia")
best("CA","pneumoniae")
best("CA","pneumonia")
names(outcome)
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
source("best.R")
best("CA","pneumonia")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "heart attack")
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
names(outcome)
source("best.R")
best("TX", "heart failure")
best("TX", "heart failure")
names(outcome)
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
source("best.R")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 0)
rankhospital("TX", "heart failure", best)
rankhospital("TX", "heart failure", "best")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankall.R")
rankhospital("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 7)
rankall("heart attack", 7)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
rankall("heart attack", 5000)
source("rankall.R")
rankall("heart attack", 5000)
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
source("rankall.R")
rankall("heart attack", 1)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
